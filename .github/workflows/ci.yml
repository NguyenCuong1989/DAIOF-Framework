name: DAIOF CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Test on Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
    
    - name: 🐍 Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: 📦 Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov black flake8 mypy
    
    - name: 🎨 Check code style with Black
      run: black --check .
      continue-on-error: true
    
    - name: 🔍 Lint with flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=100 --statistics
      continue-on-error: true
    
    - name: 🧬 Verify immutable genes
      run: |
        python -c "
        from digital_ai_organism_framework import DigitalGenome
        genome = DigitalGenome()
        assert 'human_dependency_coefficient' in genome.genes
        assert genome.genes['human_dependency_coefficient'] == 1.0
        print('✅ Immutable genes verified')
        "
    
    - name: 🧪 Run tests
      run: |
        pytest tests/ -v --cov=digital_ai_organism_framework --cov-report=xml --cov-report=term
      continue-on-error: true
    
    - name: 📊 Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  validate:
    name: Validate Framework
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
    
    - name: 🐍 Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: 📦 Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: 🎼 Test Symphony Control Center
      run: |
        python -c "
        from digital_ai_organism_framework import SymphonyControlCenter
        symphony = SymphonyControlCenter()
        print('✅ Symphony Control Center functional')
        "
    
    - name: 🧬 Test Digital Organism lifecycle
      run: |
        python -c "
        from digital_ai_organism_framework import DigitalOrganism
        organism = DigitalOrganism()
        for _ in range(10):
            organism.metabolism.cycle({'cpu': 0.1, 'memory': 0.1})
        assert organism.health > 0
        print(f'✅ Organism lifecycle working (health: {organism.health:.2f})')
        "
    
    - name: 🌍 Test Ecosystem
      run: |
        python -c "
        from digital_ai_organism_framework import DigitalEcosystem, DigitalOrganism
        ecosystem = DigitalEcosystem()
        for i in range(5):
            ecosystem.add_organism(DigitalOrganism())
        ecosystem.simulate_generation()
        print(f'✅ Ecosystem functional with {len(ecosystem.organisms)} organisms')
        "

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
    
    - name: 🐍 Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: 🔒 Run safety check
      run: |
        pip install safety
        safety check --json || true
      continue-on-error: true
    
    - name: 🔐 Run bandit security linter
      run: |
        pip install bandit
        bandit -r . -f json || true
      continue-on-error: true

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [test, validate]
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
    
    - name: 🎉 Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: DAIOF ${{ github.ref }}
        body: |
          ## Digital AI Organism Framework Release
          
          See [CHANGELOG.md](CHANGELOG.md) for details.
          
          **Status**: Production Ready ⚡
          
          Creator: Alpha_Prime_Omega (4287)
          Maintainer: Digital AI Organism
        draft: false
        prerelease: false
